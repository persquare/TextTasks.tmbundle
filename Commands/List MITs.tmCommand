<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env python -S
# encoding: utf-8

"""List tasks tagged with @mit in the HTML companion view as clickable links."""

import os
import sys
import re


envvars = ['TM_BUNDLE_SUPPORT', 'TM_SUPPORT_PATH']
sys.path[:0] = [os.environ[v]+'/lib' for v in envvars if os.environ[v] not in sys.path]

import tt_helpers as tth
import exit_codes as exit
import webpreview as wp
import applewrap

def format_output(mit):
    FMT = u'&lt;p&gt;%s : &lt;a href="%s"&gt;%s&lt;/a&gt;&lt;/p&gt;'
    TXMT_URL = u'txmt://open?url=file://%s&amp;line=%d&amp;column=%d'

    url = TXMT_URL % (mit['file'], mit['line'], 0)
    task = mit['match'].group(2)

    return FMT % (mit['project'], url, task.decode('utf-8'))

def format_flagged_email(flagged):
    FMT = u'&lt;p&gt;%s : &lt;a href="%s"&gt;%s&lt;/a&gt;&lt;/p&gt;'
    MSG_URL = u'message://&lt;%s&gt;'

    url = MSG_URL % flagged.get('msg_id', u'')
    return FMT % (flagged.get('from', u'???').decode('utf-8'), url, flagged.get('task', u'').decode('utf-8'))

projects = tth.Projects()
# General tag regex: r'^\s*-\s+.+?(?:@\w+(?:\(.*?\))?)+\s*$'
TAGGED_TASK_TEMPLATE = r"^(\s*)-\s+(.+?)\s(?:\s*@.+?\s)*?@%s(?:\((.*?)\)\s*)?(?:\s*@.+?)*\s*$"
MIT_REGEX = TAGGED_TASK_TEMPLATE % 'mit'
mit_list = projects.scan_all_projects(MIT_REGEX)
flagged_list = applewrap.Mail().get_flagged_emails()

# Produce output
if not mit_list and not flagged_list:
    text = "&lt;p&gt;No @mit's or flagged emails found :-D&lt;/p&gt;"
    try:
        import subprocess
        text += "&lt;p&gt;&lt;pre&gt;" + subprocess.check_output(['/usr/local/bin/fortune', os.environ['FORTUNE_LIST']]) + "&lt;/pre&gt;&lt;/p&gt;"
        # text = subprocess.check_output(['/usr/local/bin/fortune', '/Users/eperspe/Source/FOSS/fortune/fortunes/fortunes'])
    except:
        pass
    print wp.html_header('MITs', 'TextTasks')
    print text
    print wp.html_footer()
else:
    print wp.html_header('MITs', 'TextTasks')
    print '&lt;h2&gt;Tasks&lt;/h2&gt;'
    for mit in mit_list:
        html = format_output(mit)
        print html.encode('utf-8')
    print '&lt;h2&gt;Flagged emails&lt;/h2&gt;'
    for flagged in flagged_list:
        html = format_flagged_email(flagged)
        print html.encode('utf-8')
    print wp.html_footer()

</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>^m</string>
	<key>name</key>
	<string>List MITs</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>scope</key>
	<string>text.texttasks</string>
	<key>uuid</key>
	<string>2E89C723-DFCC-4B4E-9503-7FE127D4D3BA</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
