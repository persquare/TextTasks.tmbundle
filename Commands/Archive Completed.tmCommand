<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env python
# encoding: utf-8

"""Move all completed and cancelled tasks (including immediate comments) to the end of the file."""

import os
import sys
import re
import datetime

# Python print vs sys.stdout.write():
# http://stackoverflow.com/q/3263672

# FIXME: Read from settings
SECTION_NAME = u'Archive'

# Regexes
NAMED_SECTION = re.compile(r"\s*%s:\s*$" % SECTION_NAME)
COMPLETE = re.compile(r"^(\s*)([x\+] .*)$")
COMMENT_TEMPLATE = r"^%s(  (?!\+|-|x).*)$"
COMMENT = None

completed = []
has_named_section = False

with sys.stdin as f:
    for line in f:
        line = line.rstrip().decode('utf-8')
        if COMMENT:
            # Match comment of completed task?
            match = re.match(COMMENT, line)
            if match:
                completed.append(match.group(1))
                continue
                
        COMMENT = None
        # Match completed task?
        match = re.match(COMPLETE, line)
        if match:
            # Drop the indent when archiving
            completed.append(match.group(2))
            indent = match.group(1)
            COMMENT = re.compile(COMMENT_TEMPLATE % indent)
            continue
    
        # Line is not completed nor comment of completed =&gt;
        # write it back (sans trailing whitespace)
        sys.stdout.write(line.encode('utf-8'))
        sys.stdout.write(u'\n')
        
        match = re.match(NAMED_SECTION, line)
        if match:
            # Found the named section
            has_named_section = True
            break

    if not has_named_section:
        # Create a section heading
        sys.stdout.write(u'\n')
        sys.stdout.write((SECTION_NAME+u':\n').encode('utf-8'))

    if completed:
        now = datetime.datetime.now()
        now_str = now.strftime("%Y-%m-%d %H:%M:%S")    
        sys.stdout.write(u'---- %s ----\n' % now_str.encode('utf-8')) 
         
    for line in completed:
        sys.stdout.write(line.encode('utf-8'))
        sys.stdout.write(u'\n')

    for line in f:
            sys.stdout.write(line)
    </string>
	<key>input</key>
	<string>document</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>@A</string>
	<key>name</key>
	<string>Archive Completed</string>
	<key>outputCaret</key>
	<string>interpolateByChar</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>replaceDocument</string>
	<key>scope</key>
	<string>text.texttasks</string>
	<key>uuid</key>
	<string>247510C1-7660-4C19-951D-25EAFEE820C4</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
