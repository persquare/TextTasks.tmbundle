<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env python
# encoding: utf-8

"""
Show help for the TextTasks bundle
"""

import os
import sys
import subprocess
import StringIO

envvars = ['TM_BUNDLE_SUPPORT', 'TM_SUPPORT_PATH']
sys.path[:0] = [os.environ[v]+'/lib' for v in envvars if os.environ[v] not in sys.path]

import webpreview as wp
import help_gen

# Get the static part of the documentation
help_file = os.path.join(os.environ['TM_BUNDLE_SUPPORT'], 'help.markdown')
with open(help_file, 'r') as f:
     help_text = f.read()

# Get the auto-generated part of the documentation
cmd_dir = os.path.join(os.environ['TM_BUNDLE_SUPPORT'], '../Commands')
f = StringIO.StringIO()
save_stdout = sys.stdout
sys.stdout = f
help_gen.generate_keyboard_shortcut_docs(cmd_dir)
sys.stdout = save_stdout
shortcut_docs = f.getvalue()
f.close()
     

print wp.html_header('Foo', 'Bar')

# Let markdown_to_html.rb do the heavy lifting
md2help = os.path.join(os.environ['TM_SUPPORT_PATH'], 'lib/markdown_to_help.rb')     
p = subprocess.Popen(md2help, stdin=subprocess.PIPE)
p.stdin.write(help_text)
p.stdin.write(shortcut_docs)
p.stdin.close() # signal end of file
 
print wp.html_footer()
 

</string>
	<key>input</key>
	<string>none</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>@h</string>
	<key>name</key>
	<string>Help</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>uuid</key>
	<string>D80ED423-DBCA-4573-9E00-7D7CDD37262F</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
